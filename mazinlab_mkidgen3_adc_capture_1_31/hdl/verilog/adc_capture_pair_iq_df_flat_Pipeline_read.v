// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module adc_capture_pair_iq_df_flat_Pipeline_read (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        istream_V_TVALID,
        qstream_V_TVALID,
        iq_in8_din,
        iq_in8_full_n,
        iq_in8_write,
        capturesize,
        istream_V_TDATA,
        istream_V_TREADY,
        qstream_V_TDATA,
        qstream_V_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   istream_V_TVALID;
input   qstream_V_TVALID;
output  [255:0] iq_in8_din;
input   iq_in8_full_n;
output   iq_in8_write;
input  [26:0] capturesize;
input  [127:0] istream_V_TDATA;
output   istream_V_TREADY;
input  [127:0] qstream_V_TDATA;
output   qstream_V_TREADY;

reg ap_idle;
reg iq_in8_write;
reg istream_V_TREADY;
reg qstream_V_TREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] icmp_ln1057_fu_109_p2;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    istream_V_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    qstream_V_TDATA_blk_n;
reg    iq_in8_blk_n;
wire   [15:0] trunc_ln674_fu_121_p1;
reg   [15:0] trunc_ln674_reg_305;
reg    ap_block_pp0_stage0_11001;
wire   [15:0] trunc_ln674_1_fu_125_p1;
reg   [15:0] trunc_ln674_1_reg_310;
reg   [15:0] p_Result_4_1_reg_315;
reg   [15:0] p_Result_6_1_reg_320;
reg   [15:0] p_Result_4_2_reg_325;
reg   [15:0] p_Result_6_2_reg_330;
reg   [15:0] p_Result_4_3_reg_335;
reg   [15:0] p_Result_6_3_reg_340;
reg   [15:0] p_Result_4_4_reg_345;
reg   [15:0] p_Result_6_4_reg_350;
reg   [15:0] p_Result_4_5_reg_355;
reg   [15:0] p_Result_6_5_reg_360;
reg   [15:0] p_Result_4_6_reg_365;
reg   [15:0] p_Result_6_6_reg_370;
reg   [15:0] p_Result_4_7_reg_375;
reg   [15:0] p_Result_6_7_reg_380;
reg   [26:0] i_fu_72;
wire    ap_loop_init;
reg   [26:0] ap_sig_allocacmp_i_2;
wire   [26:0] i_3_fu_115_p2;
reg    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

adc_capture_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1057_fu_109_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
            i_fu_72 <= i_3_fu_115_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_72 <= 27'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1057_fu_109_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_4_1_reg_315 <= {{istream_V_TDATA[31:16]}};
        p_Result_4_2_reg_325 <= {{istream_V_TDATA[47:32]}};
        p_Result_4_3_reg_335 <= {{istream_V_TDATA[63:48]}};
        p_Result_4_4_reg_345 <= {{istream_V_TDATA[79:64]}};
        p_Result_4_5_reg_355 <= {{istream_V_TDATA[95:80]}};
        p_Result_4_6_reg_365 <= {{istream_V_TDATA[111:96]}};
        p_Result_4_7_reg_375 <= {{istream_V_TDATA[127:112]}};
        p_Result_6_1_reg_320 <= {{qstream_V_TDATA[31:16]}};
        p_Result_6_2_reg_330 <= {{qstream_V_TDATA[47:32]}};
        p_Result_6_3_reg_340 <= {{qstream_V_TDATA[63:48]}};
        p_Result_6_4_reg_350 <= {{qstream_V_TDATA[79:64]}};
        p_Result_6_5_reg_360 <= {{qstream_V_TDATA[95:80]}};
        p_Result_6_6_reg_370 <= {{qstream_V_TDATA[111:96]}};
        p_Result_6_7_reg_380 <= {{qstream_V_TDATA[127:112]}};
        trunc_ln674_1_reg_310 <= trunc_ln674_1_fu_125_p1;
        trunc_ln674_reg_305 <= trunc_ln674_fu_121_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1057_fu_109_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_2 = 27'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iq_in8_blk_n = iq_in8_full_n;
    end else begin
        iq_in8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iq_in8_write = 1'b1;
    end else begin
        iq_in8_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1057_fu_109_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        istream_V_TDATA_blk_n = istream_V_TVALID;
    end else begin
        istream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1057_fu_109_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        istream_V_TREADY = 1'b1;
    end else begin
        istream_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1057_fu_109_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qstream_V_TDATA_blk_n = qstream_V_TVALID;
    end else begin
        qstream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1057_fu_109_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qstream_V_TREADY = 1'b1;
    end else begin
        qstream_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((iq_in8_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start_int == 1'b1) & (((qstream_V_TVALID == 1'b0) & (icmp_ln1057_fu_109_p2 == 1'd0)) | ((icmp_ln1057_fu_109_p2 == 1'd0) & (istream_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((iq_in8_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start_int == 1'b1) & (((qstream_V_TVALID == 1'b0) & (icmp_ln1057_fu_109_p2 == 1'd0)) | ((icmp_ln1057_fu_109_p2 == 1'd0) & (istream_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((iq_in8_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start_int == 1'b1) & (((qstream_V_TVALID == 1'b0) & (icmp_ln1057_fu_109_p2 == 1'd0)) | ((icmp_ln1057_fu_109_p2 == 1'd0) & (istream_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((qstream_V_TVALID == 1'b0) & (icmp_ln1057_fu_109_p2 == 1'd0)) | ((icmp_ln1057_fu_109_p2 == 1'd0) & (istream_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (iq_in8_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign i_3_fu_115_p2 = (ap_sig_allocacmp_i_2 + 27'd1);

assign icmp_ln1057_fu_109_p2 = ((ap_sig_allocacmp_i_2 == capturesize) ? 1'b1 : 1'b0);

assign iq_in8_din = {{{{{{{{{{{{{{{{p_Result_6_7_reg_380}, {p_Result_4_7_reg_375}}, {p_Result_6_6_reg_370}}, {p_Result_4_6_reg_365}}, {p_Result_6_5_reg_360}}, {p_Result_4_5_reg_355}}, {p_Result_6_4_reg_350}}, {p_Result_4_4_reg_345}}, {p_Result_6_3_reg_340}}, {p_Result_4_3_reg_335}}, {p_Result_6_2_reg_330}}, {p_Result_4_2_reg_325}}, {p_Result_6_1_reg_320}}, {p_Result_4_1_reg_315}}, {trunc_ln674_1_reg_310}}, {trunc_ln674_reg_305}};

assign trunc_ln674_1_fu_125_p1 = qstream_V_TDATA[15:0];

assign trunc_ln674_fu_121_p1 = istream_V_TDATA[15:0];

endmodule //adc_capture_pair_iq_df_flat_Pipeline_read
