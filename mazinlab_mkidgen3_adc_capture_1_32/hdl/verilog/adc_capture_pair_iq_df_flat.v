// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module adc_capture_pair_iq_df_flat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        istream_V_TDATA,
        istream_V_TVALID,
        istream_V_TREADY,
        qstream_V_TDATA,
        qstream_V_TVALID,
        qstream_V_TREADY,
        capturesize,
        iq_in8_din,
        iq_in8_full_n,
        iq_in8_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_pp0_stage1 = 5'd4;
parameter    ap_ST_fsm_state5 = 5'd8;
parameter    ap_ST_fsm_state6 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] istream_V_TDATA;
input   istream_V_TVALID;
output   istream_V_TREADY;
input  [127:0] qstream_V_TDATA;
input   qstream_V_TVALID;
output   qstream_V_TREADY;
input  [26:0] capturesize;
output  [255:0] iq_in8_din;
input   iq_in8_full_n;
output   iq_in8_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[255:0] iq_in8_din;
reg iq_in8_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    istream_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln79_fu_329_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln79_reg_438;
reg    qstream_V_TDATA_blk_n;
reg    iq_in8_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [15:0] reg_251;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [15:0] reg_255;
reg   [15:0] reg_259;
reg   [15:0] reg_263;
reg   [15:0] reg_267;
reg   [15:0] reg_271;
reg   [15:0] reg_275;
reg   [15:0] reg_279;
reg   [15:0] reg_283;
reg   [15:0] reg_287;
reg   [15:0] reg_291;
reg   [15:0] reg_295;
reg   [15:0] reg_299;
reg   [15:0] reg_303;
wire   [15:0] trunc_ln674_fu_335_p1;
reg   [15:0] trunc_ln674_reg_442;
wire   [15:0] trunc_ln674_1_fu_339_p1;
reg   [15:0] trunc_ln674_1_reg_447;
wire   [30:0] i_3_fu_343_p2;
reg   [30:0] i_3_reg_452;
wire   [15:0] trunc_ln674_2_fu_384_p1;
reg   [15:0] trunc_ln674_2_reg_457;
wire   [15:0] trunc_ln674_3_fu_388_p1;
reg   [15:0] trunc_ln674_3_reg_462;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage1_subdone;
reg   [30:0] i_fu_82;
wire   [30:0] zext_ln79_fu_307_p1;
wire   [255:0] p_Result_11_7_fu_349_p17;
reg    ap_block_pp0_stage1_01001;
wire   [255:0] p_Result_19_7_fu_396_p17;
reg    ap_block_pp0_stage0_01001;
wire   [29:0] tmp_fu_319_p4;
wire    ap_CS_fsm_state6;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_istream_V_U_apdone_blk;
wire   [127:0] istream_V_TDATA_int_regslice;
wire    istream_V_TVALID_int_regslice;
reg    istream_V_TREADY_int_regslice;
wire    regslice_both_istream_V_U_ack_in;
wire    regslice_both_qstream_V_U_apdone_blk;
wire   [127:0] qstream_V_TDATA_int_regslice;
wire    qstream_V_TVALID_int_regslice;
reg    qstream_V_TREADY_int_regslice;
wire    regslice_both_qstream_V_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

adc_capture_regslice_both #(
    .DataWidth( 128 ))
regslice_both_istream_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(istream_V_TDATA),
    .vld_in(istream_V_TVALID),
    .ack_in(regslice_both_istream_V_U_ack_in),
    .data_out(istream_V_TDATA_int_regslice),
    .vld_out(istream_V_TVALID_int_regslice),
    .ack_out(istream_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_istream_V_U_apdone_blk)
);

adc_capture_regslice_both #(
    .DataWidth( 128 ))
regslice_both_qstream_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(qstream_V_TDATA),
    .vld_in(qstream_V_TVALID),
    .ack_in(regslice_both_qstream_V_U_ack_in),
    .data_out(qstream_V_TDATA_int_regslice),
    .vld_out(qstream_V_TVALID_int_regslice),
    .ack_out(qstream_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_qstream_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_82 <= zext_ln79_fu_307_p1;
    end else if (((icmp_ln79_reg_438 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_82 <= i_3_reg_452;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_329_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_3_reg_452 <= i_3_fu_343_p2;
        trunc_ln674_1_reg_447 <= trunc_ln674_1_fu_339_p1;
        trunc_ln674_reg_442 <= trunc_ln674_fu_335_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln79_reg_438 <= icmp_ln79_fu_329_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln79_reg_438 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln79_fu_329_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_251 <= {{istream_V_TDATA_int_regslice[31:16]}};
        reg_255 <= {{qstream_V_TDATA_int_regslice[31:16]}};
        reg_259 <= {{istream_V_TDATA_int_regslice[47:32]}};
        reg_263 <= {{qstream_V_TDATA_int_regslice[47:32]}};
        reg_267 <= {{istream_V_TDATA_int_regslice[63:48]}};
        reg_271 <= {{qstream_V_TDATA_int_regslice[63:48]}};
        reg_275 <= {{istream_V_TDATA_int_regslice[79:64]}};
        reg_279 <= {{qstream_V_TDATA_int_regslice[79:64]}};
        reg_283 <= {{istream_V_TDATA_int_regslice[95:80]}};
        reg_287 <= {{qstream_V_TDATA_int_regslice[95:80]}};
        reg_291 <= {{istream_V_TDATA_int_regslice[111:96]}};
        reg_295 <= {{qstream_V_TDATA_int_regslice[111:96]}};
        reg_299 <= {{istream_V_TDATA_int_regslice[127:112]}};
        reg_303 <= {{qstream_V_TDATA_int_regslice[127:112]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_438 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln674_2_reg_457 <= trunc_ln674_2_fu_384_p1;
        trunc_ln674_3_reg_462 <= trunc_ln674_3_fu_388_p1;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((icmp_ln79_fu_329_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln79_reg_438 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        iq_in8_blk_n = iq_in8_full_n;
    end else begin
        iq_in8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iq_in8_din = p_Result_19_7_fu_396_p17;
    end else if (((icmp_ln79_reg_438 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        iq_in8_din = p_Result_11_7_fu_349_p17;
    end else begin
        iq_in8_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln79_reg_438 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        iq_in8_write = 1'b1;
    end else begin
        iq_in8_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln79_reg_438 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln79_fu_329_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        istream_V_TDATA_blk_n = istream_V_TVALID_int_regslice;
    end else begin
        istream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln79_reg_438 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln79_fu_329_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        istream_V_TREADY_int_regslice = 1'b1;
    end else begin
        istream_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln79_reg_438 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln79_fu_329_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        qstream_V_TDATA_blk_n = qstream_V_TVALID_int_regslice;
    end else begin
        qstream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln79_reg_438 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln79_fu_329_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        qstream_V_TREADY_int_regslice = 1'b1;
    end else begin
        qstream_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln79_fu_329_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln79_fu_329_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (iq_in8_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln79_fu_329_p2 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln79_fu_329_p2 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (iq_in8_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln79_fu_329_p2 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln79_fu_329_p2 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (iq_in8_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln79_fu_329_p2 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln79_fu_329_p2 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0)))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln79_reg_438 == 1'd0) & (iq_in8_full_n == 1'b0)) | ((icmp_ln79_reg_438 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln79_reg_438 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln79_reg_438 == 1'd0) & (iq_in8_full_n == 1'b0)) | ((icmp_ln79_reg_438 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln79_reg_438 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln79_reg_438 == 1'd0) & (iq_in8_full_n == 1'b0)) | ((icmp_ln79_reg_438 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln79_reg_438 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((icmp_ln79_fu_329_p2 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln79_fu_329_p2 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = (((icmp_ln79_reg_438 == 1'd0) & (iq_in8_full_n == 1'b0)) | ((icmp_ln79_reg_438 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln79_reg_438 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (iq_in8_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign i_3_fu_343_p2 = ($signed(i_fu_82) + $signed(31'd2147483646));

assign icmp_ln79_fu_329_p2 = ((tmp_fu_319_p4 == 30'd0) ? 1'b1 : 1'b0);

assign istream_V_TREADY = regslice_both_istream_V_U_ack_in;

assign p_Result_11_7_fu_349_p17 = {{{{{{{{{{{{{{{{reg_303}, {reg_299}}, {reg_295}}, {reg_291}}, {reg_287}}, {reg_283}}, {reg_279}}, {reg_275}}, {reg_271}}, {reg_267}}, {reg_263}}, {reg_259}}, {reg_255}}, {reg_251}}, {trunc_ln674_1_reg_447}}, {trunc_ln674_reg_442}};

assign p_Result_19_7_fu_396_p17 = {{{{{{{{{{{{{{{{reg_303}, {reg_299}}, {reg_295}}, {reg_291}}, {reg_287}}, {reg_283}}, {reg_279}}, {reg_275}}, {reg_271}}, {reg_267}}, {reg_263}}, {reg_259}}, {reg_255}}, {reg_251}}, {trunc_ln674_3_reg_462}}, {trunc_ln674_2_reg_457}};

assign qstream_V_TREADY = regslice_both_qstream_V_U_ack_in;

assign tmp_fu_319_p4 = {{i_fu_82[30:1]}};

assign trunc_ln674_1_fu_339_p1 = qstream_V_TDATA_int_regslice[15:0];

assign trunc_ln674_2_fu_384_p1 = istream_V_TDATA_int_regslice[15:0];

assign trunc_ln674_3_fu_388_p1 = qstream_V_TDATA_int_regslice[15:0];

assign trunc_ln674_fu_335_p1 = istream_V_TDATA_int_regslice[15:0];

assign zext_ln79_fu_307_p1 = capturesize;

endmodule //adc_capture_pair_iq_df_flat
