-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adc_capture_pair_iq_df_flat_Pipeline_read is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    capturesize : IN STD_LOGIC_VECTOR (26 downto 0);
    istream_V_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    istream_V_TVALID : IN STD_LOGIC;
    istream_V_TREADY : OUT STD_LOGIC;
    qstream_V_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    qstream_V_TVALID : IN STD_LOGIC;
    qstream_V_TREADY : OUT STD_LOGIC;
    iq_in8_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    iq_in8_full_n : IN STD_LOGIC;
    iq_in8_write : OUT STD_LOGIC );
end;


architecture behav of adc_capture_pair_iq_df_flat_Pipeline_read is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv27_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal istream_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln1057_fu_109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qstream_V_TDATA_blk_n : STD_LOGIC;
    signal iq_in8_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal trunc_ln674_fu_120_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln674_1_fu_124_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_1_reg_314 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_1_reg_319 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_1_reg_324 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_2_reg_329 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_2_reg_334 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_3_reg_339 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_3_reg_344 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_4_reg_349 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_4_reg_354 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_5_reg_359 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_5_reg_364 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_6_reg_369 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_6_reg_374 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_7_reg_379 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_7_reg_384 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal i_fu_72 : STD_LOGIC_VECTOR (26 downto 0);
    signal i_3_fu_114_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_istream_V_U_apdone_blk : STD_LOGIC;
    signal istream_V_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal istream_V_TVALID_int_regslice : STD_LOGIC;
    signal istream_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_istream_V_U_ack_in : STD_LOGIC;
    signal regslice_both_qstream_V_U_apdone_blk : STD_LOGIC;
    signal qstream_V_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal qstream_V_TVALID_int_regslice : STD_LOGIC;
    signal qstream_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_qstream_V_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component adc_capture_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_istream_V_U : component adc_capture_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => istream_V_TDATA,
        vld_in => istream_V_TVALID,
        ack_in => regslice_both_istream_V_U_ack_in,
        data_out => istream_V_TDATA_int_regslice,
        vld_out => istream_V_TVALID_int_regslice,
        ack_out => istream_V_TREADY_int_regslice,
        apdone_blk => regslice_both_istream_V_U_apdone_blk);

    regslice_both_qstream_V_U : component adc_capture_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => qstream_V_TDATA,
        vld_in => qstream_V_TVALID,
        ack_in => regslice_both_qstream_V_U_ack_in,
        data_out => qstream_V_TDATA_int_regslice,
        vld_out => qstream_V_TVALID_int_regslice,
        ack_out => qstream_V_TREADY_int_regslice,
        apdone_blk => regslice_both_qstream_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_72 <= ap_const_lv27_0;
            elsif (((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_fu_72 <= i_3_fu_114_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Result_4_1_reg_319 <= istream_V_TDATA_int_regslice(31 downto 16);
                p_Result_4_2_reg_329 <= istream_V_TDATA_int_regslice(47 downto 32);
                p_Result_4_3_reg_339 <= istream_V_TDATA_int_regslice(63 downto 48);
                p_Result_4_4_reg_349 <= istream_V_TDATA_int_regslice(79 downto 64);
                p_Result_4_5_reg_359 <= istream_V_TDATA_int_regslice(95 downto 80);
                p_Result_4_6_reg_369 <= istream_V_TDATA_int_regslice(111 downto 96);
                p_Result_4_7_reg_379 <= istream_V_TDATA_int_regslice(127 downto 112);
                p_Result_6_1_reg_324 <= qstream_V_TDATA_int_regslice(31 downto 16);
                p_Result_6_2_reg_334 <= qstream_V_TDATA_int_regslice(47 downto 32);
                p_Result_6_3_reg_344 <= qstream_V_TDATA_int_regslice(63 downto 48);
                p_Result_6_4_reg_354 <= qstream_V_TDATA_int_regslice(79 downto 64);
                p_Result_6_5_reg_364 <= qstream_V_TDATA_int_regslice(95 downto 80);
                p_Result_6_6_reg_374 <= qstream_V_TDATA_int_regslice(111 downto 96);
                p_Result_6_7_reg_384 <= qstream_V_TDATA_int_regslice(127 downto 112);
                trunc_ln674_1_reg_314 <= trunc_ln674_1_fu_124_p1;
                trunc_ln674_reg_309 <= trunc_ln674_fu_120_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln1057_fu_109_p2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln1057_fu_109_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln1057_fu_109_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(iq_in8_full_n, ap_enable_reg_pp0_iter0, icmp_ln1057_fu_109_p2, ap_enable_reg_pp0_iter1, istream_V_TVALID_int_regslice, qstream_V_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (iq_in8_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (qstream_V_TVALID_int_regslice = ap_const_logic_0)) or ((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (istream_V_TVALID_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(iq_in8_full_n, ap_enable_reg_pp0_iter0, icmp_ln1057_fu_109_p2, ap_enable_reg_pp0_iter1, istream_V_TVALID_int_regslice, qstream_V_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (iq_in8_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (qstream_V_TVALID_int_regslice = ap_const_logic_0)) or ((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (istream_V_TVALID_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(iq_in8_full_n, ap_enable_reg_pp0_iter0, icmp_ln1057_fu_109_p2, ap_enable_reg_pp0_iter1, istream_V_TVALID_int_regslice, qstream_V_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (iq_in8_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (qstream_V_TVALID_int_regslice = ap_const_logic_0)) or ((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (istream_V_TVALID_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(icmp_ln1057_fu_109_p2, istream_V_TVALID_int_regslice, qstream_V_TVALID_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter0 <= (((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (qstream_V_TVALID_int_regslice = ap_const_logic_0)) or ((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (istream_V_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(iq_in8_full_n)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (iq_in8_full_n = ap_const_logic_0);
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln1057_fu_109_p2)
    begin
        if ((icmp_ln1057_fu_109_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    i_3_fu_114_p2 <= std_logic_vector(unsigned(i_fu_72) + unsigned(ap_const_lv27_1));
    icmp_ln1057_fu_109_p2 <= "1" when (i_fu_72 = capturesize) else "0";

    iq_in8_blk_n_assign_proc : process(iq_in8_full_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iq_in8_blk_n <= iq_in8_full_n;
        else 
            iq_in8_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_in8_din <= (((((((((((((((p_Result_6_7_reg_384 & p_Result_4_7_reg_379) & p_Result_6_6_reg_374) & p_Result_4_6_reg_369) & p_Result_6_5_reg_364) & p_Result_4_5_reg_359) & p_Result_6_4_reg_354) & p_Result_4_4_reg_349) & p_Result_6_3_reg_344) & p_Result_4_3_reg_339) & p_Result_6_2_reg_334) & p_Result_4_2_reg_329) & p_Result_6_1_reg_324) & p_Result_4_1_reg_319) & trunc_ln674_1_reg_314) & trunc_ln674_reg_309);

    iq_in8_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iq_in8_write <= ap_const_logic_1;
        else 
            iq_in8_write <= ap_const_logic_0;
        end if; 
    end process;


    istream_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln1057_fu_109_p2, istream_V_TVALID_int_regslice)
    begin
        if (((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            istream_V_TDATA_blk_n <= istream_V_TVALID_int_regslice;
        else 
            istream_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    istream_V_TREADY <= regslice_both_istream_V_U_ack_in;

    istream_V_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln1057_fu_109_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            istream_V_TREADY_int_regslice <= ap_const_logic_1;
        else 
            istream_V_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    qstream_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln1057_fu_109_p2, qstream_V_TVALID_int_regslice)
    begin
        if (((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            qstream_V_TDATA_blk_n <= qstream_V_TVALID_int_regslice;
        else 
            qstream_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    qstream_V_TREADY <= regslice_both_qstream_V_U_ack_in;

    qstream_V_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln1057_fu_109_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln1057_fu_109_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            qstream_V_TREADY_int_regslice <= ap_const_logic_1;
        else 
            qstream_V_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln674_1_fu_124_p1 <= qstream_V_TDATA_int_regslice(16 - 1 downto 0);
    trunc_ln674_fu_120_p1 <= istream_V_TDATA_int_regslice(16 - 1 downto 0);
end behav;
