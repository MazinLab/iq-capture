// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module adc_capture_pair_iq_df10 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        istream_V_TDATA,
        istream_V_TVALID,
        istream_V_TREADY,
        qstream_V_TDATA,
        qstream_V_TVALID,
        qstream_V_TREADY,
        iq_in_din,
        iq_in_full_n,
        iq_in_write,
        capturesize,
        iqout,
        capturesize_out_din,
        capturesize_out_full_n,
        capturesize_out_write,
        iqout_out_din,
        iqout_out_full_n,
        iqout_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [127:0] istream_V_TDATA;
input   istream_V_TVALID;
output   istream_V_TREADY;
input  [127:0] qstream_V_TDATA;
input   qstream_V_TVALID;
output   qstream_V_TREADY;
output  [255:0] iq_in_din;
input   iq_in_full_n;
output   iq_in_write;
input  [31:0] capturesize;
input  [63:0] iqout;
output  [31:0] capturesize_out_din;
input   capturesize_out_full_n;
output   capturesize_out_write;
output  [63:0] iqout_out_din;
input   iqout_out_full_n;
output   iqout_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg iq_in_write;
reg capturesize_out_write;
reg iqout_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    istream_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln882_fu_133_p2;
reg    qstream_V_TDATA_blk_n;
reg    iq_in_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln882_reg_149;
reg    capturesize_out_blk_n;
reg    iqout_out_blk_n;
reg   [26:0] i_reg_111;
wire   [26:0] p_capturesize_V_fu_129_p1;
reg   [26:0] p_capturesize_V_reg_144;
reg    ap_block_state1;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [26:0] i_1_fu_138_p2;
reg   [127:0] tmp_reg_158;
reg   [127:0] tmp_1_reg_163;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    din_i_i_i_pair_iq_fu_122_ap_ready;
wire   [255:0] din_i_i_i_pair_iq_fu_122_ap_return;
reg    ap_block_pp0_stage0_01001;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_istream_V_U_apdone_blk;
wire   [127:0] istream_V_TDATA_int_regslice;
wire    istream_V_TVALID_int_regslice;
reg    istream_V_TREADY_int_regslice;
wire    regslice_both_istream_V_U_ack_in;
wire    regslice_both_qstream_V_U_apdone_blk;
wire   [127:0] qstream_V_TDATA_int_regslice;
wire    qstream_V_TVALID_int_regslice;
reg    qstream_V_TREADY_int_regslice;
wire    regslice_both_qstream_V_U_ack_in;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

adc_capture_pair_iq din_i_i_i_pair_iq_fu_122(
    .ap_ready(din_i_i_i_pair_iq_fu_122_ap_ready),
    .i_in(tmp_reg_158),
    .q_in(tmp_1_reg_163),
    .ap_return(din_i_i_i_pair_iq_fu_122_ap_return)
);

regslice_both #(
    .DataWidth( 128 ))
regslice_both_istream_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(istream_V_TDATA),
    .vld_in(istream_V_TVALID),
    .ack_in(regslice_both_istream_V_U_ack_in),
    .data_out(istream_V_TDATA_int_regslice),
    .vld_out(istream_V_TVALID_int_regslice),
    .ack_out(istream_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_istream_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 128 ))
regslice_both_qstream_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(qstream_V_TDATA),
    .vld_in(qstream_V_TVALID),
    .ack_in(regslice_both_qstream_V_U_ack_in),
    .data_out(qstream_V_TDATA_int_regslice),
    .vld_out(qstream_V_TVALID_int_regslice),
    .ack_out(qstream_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_qstream_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (iqout_out_full_n == 1'b0) | (capturesize_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((real_start == 1'b0) | (iqout_out_full_n == 1'b0) | (capturesize_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_fu_133_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_111 <= i_1_fu_138_p2;
    end else if ((~((real_start == 1'b0) | (iqout_out_full_n == 1'b0) | (capturesize_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_111 <= 27'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln882_reg_149 <= icmp_ln882_fu_133_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (iqout_out_full_n == 1'b0) | (capturesize_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_capturesize_V_reg_144 <= p_capturesize_V_fu_129_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_fu_133_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_reg_163 <= qstream_V_TDATA_int_regslice;
        tmp_reg_158 <= istream_V_TDATA_int_regslice;
    end
end

always @ (*) begin
    if ((icmp_ln882_fu_133_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        capturesize_out_blk_n = capturesize_out_full_n;
    end else begin
        capturesize_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (iqout_out_full_n == 1'b0) | (capturesize_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        capturesize_out_write = 1'b1;
    end else begin
        capturesize_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_reg_149 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iq_in_blk_n = iq_in_full_n;
    end else begin
        iq_in_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln882_reg_149 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iq_in_write = 1'b1;
    end else begin
        iq_in_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        iqout_out_blk_n = iqout_out_full_n;
    end else begin
        iqout_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (iqout_out_full_n == 1'b0) | (capturesize_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        iqout_out_write = 1'b1;
    end else begin
        iqout_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_fu_133_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        istream_V_TDATA_blk_n = istream_V_TVALID_int_regslice;
    end else begin
        istream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln882_fu_133_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        istream_V_TREADY_int_regslice = 1'b1;
    end else begin
        istream_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_fu_133_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qstream_V_TDATA_blk_n = qstream_V_TVALID_int_regslice;
    end else begin
        qstream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln882_fu_133_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qstream_V_TREADY_int_regslice = 1'b1;
    end else begin
        qstream_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (iqout_out_full_n == 1'b0) | (capturesize_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln882_fu_133_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln882_fu_133_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln882_reg_149 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (iq_in_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln882_fu_133_p2 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln882_fu_133_p2 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln882_reg_149 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (iq_in_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln882_fu_133_p2 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln882_fu_133_p2 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln882_reg_149 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (iq_in_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln882_fu_133_p2 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln882_fu_133_p2 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (iqout_out_full_n == 1'b0) | (capturesize_out_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((icmp_ln882_fu_133_p2 == 1'd0) & (qstream_V_TVALID_int_regslice == 1'b0)) | ((icmp_ln882_fu_133_p2 == 1'd0) & (istream_V_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln882_reg_149 == 1'd0) & (iq_in_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign capturesize_out_din = capturesize;

assign i_1_fu_138_p2 = (i_reg_111 + 27'd1);

assign icmp_ln882_fu_133_p2 = ((i_reg_111 == p_capturesize_V_reg_144) ? 1'b1 : 1'b0);

assign iq_in_din = din_i_i_i_pair_iq_fu_122_ap_return;

assign iqout_out_din = iqout;

assign istream_V_TREADY = regslice_both_istream_V_U_ack_in;

assign p_capturesize_V_fu_129_p1 = capturesize[26:0];

assign qstream_V_TREADY = regslice_both_qstream_V_U_ack_in;

assign start_out = real_start;

endmodule //adc_capture_pair_iq_df10
